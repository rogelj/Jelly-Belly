<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>// The code below causes a deadlock.
// Fix it by choosing which queues should perform a synchronous execution &amp;
// which ones should perform an asynchronous execution.
// N.B. The solution code must be a mix of sync &amp; async execution.
</string>
			<key>ModifiedRange</key>
			<string>{143, 236}</string>
			<key>OriginalContent</key>
			<string>//The code below causes a deadlock
//Fix it by choosing which queues should perform a synchronous execution &amp;
//which ones should perform an asynchronous execution
//N.B. The solution code must be a mix of sync &amp; async execution
</string>
			<key>OriginalRange</key>
			<string>{143, 229}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>// To get rid of the deadlock I have made the `bondQueue` run asynchronoulsy. Since `writerQueue` is dispatched synchronously at the beginning of the block below, it would be expecting to finish before it can do anything else. We can let Bond order his drink by doing so asynchronoulsy - letting the current queue continue immediately to the next task.
</string>
			<key>ModifiedRange</key>
			<string>{380, 353}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{373, 0}</string>
		</dict>
		<dict>
			<key>ModifiedContent</key>
			<string>a</string>
			<key>ModifiedRange</key>
			<string>{823, 1}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{463, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
